@page "/registrar"
@inject Tarea9_10.Services.UsuarioServicio servicio
@using Tarea9_10.Models
@inject AuthenticationStateProvider auth
@inject NavigationManager nav
@inject IJSRuntime Js

<div class="col-5 bg-light m-2 justify-content-start">
    <div class="p-3 mb-3 bg-primary text-white text-center">Registrar Usuario</div>
    <EditForm Model="@NuevoUsuario" OnValidSubmit="@Verificar">
        <div class="form-group">
            <label>Usuario</label>
            <input type="text" class="form-control" @bind-value="@NuevoUsuario.Correo" required />
        </div>
        <div class="form-group">
            <label>Contraseña</label>
            <input type="password" class="form-control" @bind="@NuevoUsuario.Clave" required />
        </div>
        <div class="form-group">
            <label>Confirmar Contraseña</label>
            <input type="password" class="form-control" @bind="@Clave" required />
        </div>
        <div class="text-center p-3 mb-3">
            <button class="btn btn-info" type="submit"> Completar Registro</button>
        </div>
    </EditForm>
    <div class="text-center p-3 mb-3">
        <button class="btn btn-info" @onclick="Log">Log In</button>
    </div>
</div>

@code {
    public Usuario NuevoUsuario { get; set; } = new Usuario();
    List<Usuario> Usuarios = new List<Usuario>();
    string Clave;

    protected override async Task OnInitializedAsync()
    {
        Usuarios = await servicio.GetUsuariosAsync();
    }

    private async Task AgregarUsuario()
    {

        await servicio.AgregarUsuario(NuevoUsuario);
        await Js.InvokeAsync<bool>("confirm", "Usuario Guardado!");
        nav.NavigateTo("/inicio");

    }

    private async Task Verificar()
    {
        if(NuevoUsuario.Correo == null || NuevoUsuario.Clave == null || Clave == null )
            await Js.InvokeAsync<bool>("confirm", "Debe llenar todos los campos");
        else {
            var match = Usuarios.Any(u => u.Correo == NuevoUsuario.Correo);
            if (match == true)
            {
                await Js.InvokeAsync<bool>("confirm", "Usuario ya existe");
            }
            else
            {
                if(NuevoUsuario.Clave != Clave)
                {
                    await Js.InvokeAsync<bool>("confirm", "Contraseñas no coinciden");
                }
                else
                {
                    await AgregarUsuario();
                }
            }
        }

    }

    private void Log()
    {
        nav.NavigateTo("/inicio");
    }
}

